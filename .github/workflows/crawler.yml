name: crawler

on:
  workflow_call:
    inputs:
      args:
        description: Extra args to pass to crawler.rb script.
        required: false
        default: ''
        type: string
      override-files:
        description: Override files (with wget). Format url=path (multiline).
        required: false
        default: ''
        type: string
      fetch-command:
        description: >
          The Command that performs data fetch and 'git commit' data.
          The `args` input will be passed as arguments to `fetch-command`
          The data out of the 'data' directory should be committed in the script explicitly.
        required: false
        default: 'bundle exec ruby crawler.rb'
        type: string
    secrets:
      args:
        description: Extra args to pass to crawler.rb script
        required: false

jobs:
  crawl:
    name: Documents fetching
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - run: |
          while read line
          do
            if [ "$line" = "" ]
            then
              continue
            fi
            url=${line%=*}
            path="${line#*=}"
            mkdir -p $(dirname "${path}")
            wget "${url}" -O "${path}"
          done <<< "${{ inputs.override-files }}"
        shell: bash

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7
          bundler-cache: true

      - run: |
          rm -rf data index.yaml index.zip index-new.yaml index-new.zip
          ${{ inputs.fetch-command }} ${{ inputs.args }} ${{ secrets.args }}

      - name: Diff data
        id: diff
        run: |
          [ -d data ] && echo data/* | xargs git add
          git add -u data/

          if [ -f index.yaml ]; then
            zip index.zip index.yaml
            git add index.zip index.yaml
          fi

          if git diff --cached --exit-code
          then
            echo "Data not changed. Skip commit"
            echo "skip_commit=true" >> $GITHUB_OUTPUT
            exit 0
          fi

          echo "skip_commit=false" >> $GITHUB_OUTPUT

      - if: github.event_name != 'pull_request' && steps.diff.outputs.skip_commit != 'true'
        name: Push data
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

          git diff --quiet && git diff --staged --quiet || (git commit -m 'update documents' && git push)
